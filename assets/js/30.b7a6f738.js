(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{315:function(s,n,t){"use strict";t.r(n);var a=t(10),e=Object(a.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"c-数组与字符串转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#c-数组与字符串转换"}},[s._v("#")]),s._v(" C++数组与字符串转换")]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# include <iostream>\n# include <fstream>\n# include <string>\n# include <time.h>\n# include <stdio.h>\n# include <stdlib.h>\nusing namespace std;\n\n//字符串转16进制字符串,适用于所有字符（包括中文）\nstd::string encodeHexString(const std::string& str) {\n\t// 根据默认编码获取字节数组\n\tconst std::string hexString = \"0123456789abcdef\";\n\tstring sb;\n\t// 将字节数组中每个字节拆解成2位16进制整数\n\tfor (int i = 0; i < str.length(); i++) {\n\t\tsb += hexString.at((str[i] & 0xf0) >> 4);\n\t\tsb += hexString.at((str[i] & 0x0f) >> 0);\n\t}\n\treturn sb;\n}\n\n//16进制字符串转字符串\nstd::string hexStringToString(const std::string& hexStr)\n{\n\tstd::string ret;\n\tconst std::string hexString = \"0123456789abcdef\";\n\t// 将每2位16进制整数组装成一个字节\n\tfor (int i = 0; i < hexStr.length(); i += 2)\n\t\tret += BYTE(hexString.find(hexStr.at(i)) << 4 | hexString.find(hexStr.at(i + 1)));\n\treturn ret;\n}\n\n//字节数组转16进制字符串\nstd::string bytesToHexString(const BYTE* bytes, const int length)\n{\n\tif (bytes == NULL) {\n\t\treturn \"\";\n\t}\n\tstd::string buff;\n\tconst int len = length;\n\tfor (int j = 0; j < len; j++) {\n\t\tint high = bytes[j] / 16, low = bytes[j] % 16;\n\t\tbuff += (high < 10) ? ('0' + high) : ('a' + high - 10);\n\t\tbuff += (low < 10) ? ('0' + low) : ('a' + low - 10);\n\t}\n\treturn buff;\n}\n\n//16进制字符串 转 字节数组\nvoid hexStringToBytes(const std::string& hex, BYTE* bytes)\n{\n\tint bytelen = hex.length() / 2;\n\tstd::string strByte;\n\tunsigned int n;\n\tfor (int i = 0; i < bytelen; i++)\n\t{\n\t\tstrByte = hex.substr(i * 2, 2);\n\t\tsscanf_s(strByte.c_str(), \"%x\", &n);\n\t\tbytes[i] = n;\n\t}\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br")])]),n("p",[s._v("使用示例：")]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('  unsigned char out[300] = { 0 };\n  hexStringToBytes("1122003344", out);\n  std::cout << bytesToHexString(out, 5) << std::endl;\n  std::cout << hexStringToString("323334") << std::endl;\n  std::cout << encodeHexString("323334") << std::endl;\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);