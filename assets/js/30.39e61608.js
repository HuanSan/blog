(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{468:function(a,t,s){"use strict";s.r(t);var r=s(24),_=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[a._v("#")]),a._v(" 算法")]),a._v(" "),s("h2",{attrs:{id:"_1、数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、数组"}},[a._v("#")]),a._v(" 1、数组")]),a._v(" "),s("h3",{attrs:{id:"_1-1-合并两个有序数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-合并两个有序数组"}},[a._v("#")]),a._v(" 1.1 合并两个有序数组")]),a._v(" "),s("h3",{attrs:{id:"_1-2-数组中第k大元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-数组中第k大元素"}},[a._v("#")]),a._v(" 1.2 数组中第K大元素")]),a._v(" "),s("h3",{attrs:{id:"_1-3-长度最小的子数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-长度最小的子数组"}},[a._v("#")]),a._v(" 1.3 长度最小的子数组")]),a._v(" "),s("h3",{attrs:{id:"_1-4-最长重复子数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-最长重复子数组"}},[a._v("#")]),a._v(" 1.4 最长重复子数组")]),a._v(" "),s("h3",{attrs:{id:"_1-5-二维数组的查找"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-二维数组的查找"}},[a._v("#")]),a._v(" 1.5 二维数组的查找")]),a._v(" "),s("h2",{attrs:{id:"_2、字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、字符串"}},[a._v("#")]),a._v(" 2、字符串")]),a._v(" "),s("h3",{attrs:{id:"_2-1-字符串相加"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-字符串相加"}},[a._v("#")]),a._v(" 2.1 字符串相加")]),a._v(" "),s("h3",{attrs:{id:"_2-2-最长不重复字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-最长不重复字符串"}},[a._v("#")]),a._v(" 2.2 最长不重复字符串")]),a._v(" "),s("h3",{attrs:{id:"_2-3-公共字串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-公共字串"}},[a._v("#")]),a._v(" 2.3 公共字串")]),a._v(" "),s("h3",{attrs:{id:"_2-4-最长公共前缀"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-最长公共前缀"}},[a._v("#")]),a._v(" 2.4 最长公共前缀")]),a._v(" "),s("h2",{attrs:{id:"_3、排序查找"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、排序查找"}},[a._v("#")]),a._v(" 3、排序查找")]),a._v(" "),s("h3",{attrs:{id:"_3-1-排序算法稳定性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-排序算法稳定性"}},[a._v("#")]),a._v(" 3.1 排序算法稳定性")]),a._v(" "),s("h3",{attrs:{id:"_3-2-冒泡排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-冒泡排序"}},[a._v("#")]),a._v(" 3.2 冒泡排序")]),a._v(" "),s("h3",{attrs:{id:"_3-3-选择排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-选择排序"}},[a._v("#")]),a._v(" 3.3 选择排序")]),a._v(" "),s("h3",{attrs:{id:"_3-4-插入排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-插入排序"}},[a._v("#")]),a._v(" 3.4 插入排序")]),a._v(" "),s("h4",{attrs:{id:"_3-4-1-直接插入排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-1-直接插入排序"}},[a._v("#")]),a._v(" 3.4.1 直接插入排序")]),a._v(" "),s("h4",{attrs:{id:"_3-4-2-折半插入排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-2-折半插入排序"}},[a._v("#")]),a._v(" 3.4.2 折半插入排序")]),a._v(" "),s("h4",{attrs:{id:"_3-4-3-希尔排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-3-希尔排序"}},[a._v("#")]),a._v(" 3.4.3 希尔排序")]),a._v(" "),s("h3",{attrs:{id:"_3-5-快速排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-快速排序"}},[a._v("#")]),a._v(" 3.5 快速排序")]),a._v(" "),s("h3",{attrs:{id:"_3-6-常见算法效率比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-常见算法效率比较"}},[a._v("#")]),a._v(" 3.6 常见算法效率比较")]),a._v(" "),s("h2",{attrs:{id:"_4、二叉树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、二叉树"}},[a._v("#")]),a._v(" 4、二叉树")]),a._v(" "),s("h3",{attrs:{id:"_4-1-二叉树结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-二叉树结构"}},[a._v("#")]),a._v(" 4.1 二叉树结构")]),a._v(" "),s("h3",{attrs:{id:"_4-2-树的创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-树的创建"}},[a._v("#")]),a._v(" 4.2 树的创建")]),a._v(" "),s("h3",{attrs:{id:"_4-3-二叉树遍历"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-二叉树遍历"}},[a._v("#")]),a._v(" 4.3 二叉树遍历")]),a._v(" "),s("h4",{attrs:{id:"_4-3-1-前序遍历"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-前序遍历"}},[a._v("#")]),a._v(" 4.3.1 前序遍历")]),a._v(" "),s("h4",{attrs:{id:"_4-3-2-中序遍历"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-中序遍历"}},[a._v("#")]),a._v(" 4.3.2 中序遍历")]),a._v(" "),s("h4",{attrs:{id:"_4-3-3-后序遍历"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-3-后序遍历"}},[a._v("#")]),a._v(" 4.3.3 后序遍历")]),a._v(" "),s("h3",{attrs:{id:"_4-4-二叉树类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-二叉树类型"}},[a._v("#")]),a._v(" 4.4 二叉树类型")]),a._v(" "),s("h4",{attrs:{id:"_4-4-1-普通二叉树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-1-普通二叉树"}},[a._v("#")]),a._v(" 4.4.1 普通二叉树")]),a._v(" "),s("h4",{attrs:{id:"_4-4-2-平衡二叉树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-2-平衡二叉树"}},[a._v("#")]),a._v(" 4.4.2 平衡二叉树")]),a._v(" "),s("h4",{attrs:{id:"_4-4-3-二叉搜索树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-3-二叉搜索树"}},[a._v("#")]),a._v(" 4.4.3 二叉搜索树")]),a._v(" "),s("h3",{attrs:{id:"_4-5-常见基础题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-常见基础题"}},[a._v("#")]),a._v(" 4.5 常见基础题")]),a._v(" "),s("h4",{attrs:{id:"_4-5-1-求二叉树节点的个数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-1-求二叉树节点的个数"}},[a._v("#")]),a._v(" 4.5.1 求二叉树节点的个数")]),a._v(" "),s("h4",{attrs:{id:"_4-5-2-求二叉树的深度-高度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-2-求二叉树的深度-高度"}},[a._v("#")]),a._v(" 4.5.2 求二叉树的深度（高度）")]),a._v(" "),s("h4",{attrs:{id:"_4-5-3-求二叉树第k层的节点个数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-3-求二叉树第k层的节点个数"}},[a._v("#")]),a._v(" 4.5.3 求二叉树第K层的节点个数")]),a._v(" "),s("h4",{attrs:{id:"_4-5-4-判断两颗二叉树是否是相同的树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-4-判断两颗二叉树是否是相同的树"}},[a._v("#")]),a._v(" 4.5.4 判断两颗二叉树是否是相同的树")]),a._v(" "),s("h4",{attrs:{id:"_4-5-5-判断二叉树是否是二叉平衡树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-5-判断二叉树是否是二叉平衡树"}},[a._v("#")]),a._v(" 4.5.5 判断二叉树是否是二叉平衡树")]),a._v(" "),s("h4",{attrs:{id:"_4-5-6-求二叉树的镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-6-求二叉树的镜像"}},[a._v("#")]),a._v(" 4.5.6 求二叉树的镜像")]),a._v(" "),s("h4",{attrs:{id:"_4-5-7-判断两颗二叉树是否互为镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-7-判断两颗二叉树是否互为镜像"}},[a._v("#")]),a._v(" 4.5.7 判断两颗二叉树是否互为镜像")]),a._v(" "),s("h4",{attrs:{id:"_4-5-8-判断是否为二叉搜索树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-8-判断是否为二叉搜索树"}},[a._v("#")]),a._v(" 4.5.8 判断是否为二叉搜索树")]),a._v(" "),s("h4",{attrs:{id:"_4-5-9-判断是否有子树结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-9-判断是否有子树结构"}},[a._v("#")]),a._v(" 4.5.9 判断是否有子树结构")]),a._v(" "),s("h4",{attrs:{id:"_4-5-10-最近的公共节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-10-最近的公共节点"}},[a._v("#")]),a._v(" 4.5.10 最近的公共节点")]),a._v(" "),s("h2",{attrs:{id:"_5、链表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、链表"}},[a._v("#")]),a._v(" 5、链表")]),a._v(" "),s("h3",{attrs:{id:"_5-1-单链表结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-单链表结构"}},[a._v("#")]),a._v(" 5.1 单链表结构")]),a._v(" "),s("h3",{attrs:{id:"_5-2-单链表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-单链表"}},[a._v("#")]),a._v(" 5.2 单链表")]),a._v(" "),s("h4",{attrs:{id:"_5-2-1-获取链表长度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-1-获取链表长度"}},[a._v("#")]),a._v(" 5.2.1 获取链表长度")]),a._v(" "),s("h4",{attrs:{id:"_5-2-2-输出单链表的倒数第k个节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-2-输出单链表的倒数第k个节点"}},[a._v("#")]),a._v(" 5.2.2 输出单链表的倒数第K个节点")]),a._v(" "),s("h4",{attrs:{id:"_5-2-3-从头到尾打印链表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-3-从头到尾打印链表"}},[a._v("#")]),a._v(" 5.2.3 从头到尾打印链表")]),a._v(" "),s("h4",{attrs:{id:"_5-2-4-反转链表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-4-反转链表"}},[a._v("#")]),a._v(" 5.2.4 反转链表")]),a._v(" "),s("h4",{attrs:{id:"_5-2-5-删除链表中节点、要求时间复杂度o-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-5-删除链表中节点、要求时间复杂度o-1"}},[a._v("#")]),a._v(" 5.2.5 删除链表中节点、要求时间复杂度o(1)")]),a._v(" "),s("h4",{attrs:{id:"_5-2-6-删除链表中重复的节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-6-删除链表中重复的节点"}},[a._v("#")]),a._v(" 5.2.6 删除链表中重复的节点")]),a._v(" "),s("h4",{attrs:{id:"_5-2-7-两个链表中的第一个公共节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-7-两个链表中的第一个公共节点"}},[a._v("#")]),a._v(" 5.2.7 两个链表中的第一个公共节点")]),a._v(" "),s("h4",{attrs:{id:"_5-2-8-使用链表实现大数加法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-8-使用链表实现大数加法"}},[a._v("#")]),a._v(" 5.2.8 使用链表实现大数加法")]),a._v(" "),s("h4",{attrs:{id:"_5-2-9-单链表排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-9-单链表排序"}},[a._v("#")]),a._v(" 5.2.9 单链表排序")]),a._v(" "),s("h4",{attrs:{id:"_5-2-10-有序链表合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-10-有序链表合并"}},[a._v("#")]),a._v(" 5.2.10 有序链表合并")]),a._v(" "),s("h3",{attrs:{id:"_5-3-环形链表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-环形链表"}},[a._v("#")]),a._v(" 5.3 环形链表")]),a._v(" "),s("h4",{attrs:{id:"_5-3-1-判断链表中是否存在环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-1-判断链表中是否存在环"}},[a._v("#")]),a._v(" 5.3.1 判断链表中是否存在环")]),a._v(" "),s("h4",{attrs:{id:"_5-3-2-找到环路的入口节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-2-找到环路的入口节点"}},[a._v("#")]),a._v(" 5.3.2 找到环路的入口节点")]),a._v(" "),s("h4",{attrs:{id:"_5-3-3-计算环路长度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-3-计算环路长度"}},[a._v("#")]),a._v(" 5.3.3 计算环路长度")]),a._v(" "),s("h2",{attrs:{id:"_6、实际应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、实际应用"}},[a._v("#")]),a._v(" 6、实际应用")]),a._v(" "),s("h3",{attrs:{id:"_6-1-算法应用题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-算法应用题"}},[a._v("#")]),a._v(" 6.1 算法应用题")]),a._v(" "),s("h3",{attrs:{id:"_6-2-动态规划"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-动态规划"}},[a._v("#")]),a._v(" 6.2 动态规划")]),a._v(" "),s("h3",{attrs:{id:"_6-3-深度优先搜索"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-深度优先搜索"}},[a._v("#")]),a._v(" 6.3 深度优先搜索")]),a._v(" "),s("h3",{attrs:{id:"_6-4-广度优先搜索"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-广度优先搜索"}},[a._v("#")]),a._v(" 6.4 广度优先搜索")])])}),[],!1,null,null,null);t.default=_.exports}}]);