(window.webpackJsonp=window.webpackJsonp||[]).push([[223],{539:function(v,_,e){"use strict";e.r(_);var t=e(10),s=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"vue2-与-vue3-的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue2-与-vue3-的区别"}},[v._v("#")]),v._v(" vue2 与 vue3 的区别")]),v._v(" "),_("h2",{attrs:{id:"_1、新特性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1、新特性"}},[v._v("#")]),v._v(" 1、新特性")]),v._v(" "),_("ul",[_("li",[v._v("组合式 API")]),v._v(" "),_("li",[v._v("单文件组件中的组合式 API 语法糖 ("),_("code",[v._v("<script setup>")]),v._v(")")]),v._v(" "),_("li",[v._v("Teleport 组件，将一个组件内部的一部分模板“传送”到该组件的 DOM 结构外层的位置去")]),v._v(" "),_("li",[v._v("Fragments 片段，支持多根节点的组件")]),v._v(" "),_("li",[v._v("Emits 组件选项，用于声明由组件触发的自定义事件")]),v._v(" "),_("li",[v._v("来自 @vue/runtime-core 的 createRenderer API 用来创建自定义渲染函数，可以应用于单元测试")]),v._v(" "),_("li",[v._v("CSS 中的 v-bind()，"),_("code",[v._v("<style>")]),v._v(" 标签里面的 v-bind 可以绑定到 "),_("code",[v._v("<script>")]),v._v("里面声明的值")]),v._v(" "),_("li",[v._v("SFC "),_("code",[v._v("<style scoped>")]),v._v(" 新增全局规则和针对插槽内容的规则")]),v._v(" "),_("li",[v._v("Suspense，实现顶层 await，会自动让该组件成为一个异步依赖")])]),v._v(" "),_("h2",{attrs:{id:"_2、新的框架级别推荐"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2、新的框架级别推荐"}},[v._v("#")]),v._v(" 2、新的框架级别推荐")]),v._v(" "),_("ul",[_("li",[v._v("新版本的 Router, Devtools & test utils 来支持 Vue 3")]),v._v(" "),_("li",[v._v("构建工具链: Vue CLI -> Vite")]),v._v(" "),_("li",[v._v("状态管理: Vuex -> Pinia")]),v._v(" "),_("li",[v._v("IDE 支持: Vetur -> Volar")]),v._v(" "),_("li",[v._v("新的 TypeScript 命令行工具: vue-tsc")]),v._v(" "),_("li",[v._v("静态网站生成: VuePress -> VitePress")]),v._v(" "),_("li",[v._v("JSX: @vue/babel-preset-jsx -> @vue/babel-plugin-jsx")])]),v._v(" "),_("h2",{attrs:{id:"_3、全局-api"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3、全局-api"}},[v._v("#")]),v._v(" 3、全局 API")]),v._v(" "),_("ul",[_("li",[v._v("createApp，调用 createApp 返回一个应用实例")]),v._v(" "),_("li",[v._v("tree-shaking，全局 API 现在通过具名导出进行访问。不能使用 "),_("code",[v._v("Vue.xxx")]),v._v("。")])]),v._v(" "),_("h2",{attrs:{id:"_4、模板指令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4、模板指令"}},[v._v("#")]),v._v(" 4、模板指令")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("v-model")]),v._v("，同一个组件上使用多个 v-model 绑定，自定义 v-model 修饰符")]),v._v(" "),_("li",[v._v("key 使用改变：\n"),_("ul",[_("li",[v._v("对于 "),_("code",[v._v("v-if/v-else/v-else-if")]),v._v(" 的各分支项 key 将不再是必须的")]),v._v(" "),_("li",[_("code",[v._v("<template v-for>")]),v._v(" 的 key 应该设置在 "),_("code",[v._v("<template>")]),v._v(" 标签上 (而不是设置在它的子节点上)。")])])]),v._v(" "),_("li",[v._v("v-if 比 v-for 的优先级高")]),v._v(" "),_("li",[v._v("v-bind 合并行为，起决于声明顺序，会被后面声明的相同属性覆盖")]),v._v(" "),_("li",[v._v("v-on.native 移除")])]),v._v(" "),_("h2",{attrs:{id:"_5、组件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5、组件"}},[v._v("#")]),v._v(" 5、组件")]),v._v(" "),_("ul",[_("li",[v._v("函数式组件，所有的函数式组件都是用普通函数创建的，不需要定义 "),_("code",[v._v("{ functional: true }")]),v._v("，它们将接收两个参数：props 和 context。context 参数是一个对象，包含组件的 attrs、slots 和 emit property。")]),v._v(" "),_("li",[v._v("异步组件，新的 defineAsyncComponent 助手方法，用于显式地定义异步组件，Loader 函数本身不再接收 resolve 和 reject 参数，且必须返回一个 Promise")]),v._v(" "),_("li",[v._v("emits 选项，这个选项可以用来定义一个组件可以向其父组件触发的事件。")])]),v._v(" "),_("h2",{attrs:{id:"_6、渲染函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6、渲染函数"}},[v._v("#")]),v._v(" 6、渲染函数")]),v._v(" "),_("ul",[_("li",[v._v("h 现在是全局导入，而不是作为参数传递给渲染函数")]),v._v(" "),_("li",[v._v("VNode 现在有一个扁平的 prop 结构")]),v._v(" "),_("li",[v._v("this.$slots 现在将插槽作为函数公开")]),v._v(" "),_("li",[v._v("非兼容：移除 this.$scopedSlots")]),v._v(" "),_("li",[v._v("$listeners 对象在 Vue 3 中已被移除。事件监听器现在是 $attrs 的一部分")]),v._v(" "),_("li",[v._v("$attrs 现在包含了所有传递给组件的 attribute，包括 class 和 style")])]),v._v(" "),_("h2",{attrs:{id:"_7、移除的-apis"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7、移除的-apis"}},[v._v("#")]),v._v(" 7、移除的 APIs")]),v._v(" "),_("ul",[_("li",[v._v("不再支持使用数字 (即键码) 作为 "),_("code",[v._v("v-on")]),v._v(" 修饰符")]),v._v(" "),_("li",[v._v("不再支持 "),_("code",[v._v("config.keyCodes")])]),v._v(" "),_("li",[v._v("$on，$off 和 $once 实例方法已被移除，组件实例不再实现事件触发接口")]),v._v(" "),_("li",[v._v("过滤器已移除，且不再支持，建议用方法调用或计算属性来替代")]),v._v(" "),_("li",[v._v("inline-template 对内联模板特性的支持已被移除。")]),v._v(" "),_("li",[v._v("$children 已移除")]),v._v(" "),_("li",[v._v("propsData 已移除")])]),v._v(" "),_("h2",{attrs:{id:"_8、其他"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8、其他"}},[v._v("#")]),v._v(" 8、其他")]),v._v(" "),_("ul",[_("li",[v._v("data 选项，只接受返回 object 的 function，并操作现在是浅层次的而非深层次的")])])])}),[],!1,null,null,null);_.default=s.exports}}]);