(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{342:function(t,a,r){"use strict";r.r(a);var s=r(10),n=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"第1章-什么是-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第1章-什么是-javascript"}},[t._v("#")]),t._v(" 第1章 什么是 JavaScript")]),t._v(" "),a("p",[t._v("1995 年，JavaScript 问世。当时，它的主要用途是代替 Perl 等服务器端语言处理输入验证。在此之\n前，要验证某个必填字段是否已填写，或者某个输入的值是否有效，需要与服务器的一次往返通信。网\n景公司希望通过在其 Navigator 浏览器中加入 JavaScript 来改变这个局面。在那个普遍通过电话拨号上网\n的年代，由客户端处理某些基本的验证是让人兴奋的新功能。缓慢的网速让页面每次刷新都考验着人们\n的耐心。")]),t._v(" "),a("p",[t._v("从那时起，JavaScript 逐渐成为市面上所有主流浏览器的标配。如今，JavaScript 的应用也不再局限\n于数据验证，而是渗透到浏览器窗口及其内容的方方面面。JavaScript 已被公认为主流的编程语言，能\n够实现复杂的计算与交互，包括闭包、匿名（lambda）函数，甚至元编程等特性。不仅是桌面浏览器，\n手机浏览器和屏幕阅读器也支持 JavaScript，其重要性可见一斑。就连拥有自家客户端脚本语言 VBScript\n的微软公司，也在其 Internet Explorer（以下简称 IE）浏览器最初的版本中包含了自己的 JavaScript 实现。")]),t._v(" "),a("h2",{attrs:{id:"_1-1-简短的历史回顾"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-简短的历史回顾"}},[t._v("#")]),t._v(" 1.1 简短的历史回顾")]),t._v(" "),a("p",[t._v("1995 年，网景公司一位名叫 Brendan Eich 的工程师，开始为即将发布的 Netscape Navigator 2 开发一\n个叫 Mocha（后来改名为 LiveScript）的脚本语言。当时的计划是在客户端和服务器端都使用它，它在\n服务器端叫 LiveWire。")]),t._v(" "),a("p",[t._v("为了赶上发布时间，网景与 Sun 公司结为开发联盟，共同完成 LiveScript 的开发。就在 Netscape\nNavigator 2正式发布前，网景把 LiveScript改名为 JavaScript，以便搭上媒体当时热烈炒作 Java的顺风车。")]),t._v(" "),a("p",[t._v("由于 JavaScript 1.0 很成功，网景又在 Netscape Navigator 3 中发布了 1.1 版本。尚未成熟的 Web 的受\n欢迎程度达到了历史新高，而网景则稳居市场领导者的位置。这时候，微软决定向 IE 投入更多资源。\n就在 Netscape Navigator 3发布后不久，微软发布了 IE3，其中包含自己名为 JScript（叫这个名字是为了\n避免与网景发生许可纠纷）的 JavaScript 实现。1996 年 8 月，微软重磅进入 Web 浏览器领域，这是网景\n永远的痛，但它代表 JavaScript 作为一门语言向前迈进了一大步。")]),t._v(" "),a("p",[t._v("1997 年，JavaScript 1.1 作为提案被提交给欧洲计算机制造商协会（Ecma）。第 39 技术委员会（TC39）\n承担了“标准化一门通用、跨平台、厂商中立的脚本语言的语法和语义”的任务（参见 TC39-ECMAScript）。\nTC39 委员会由来自网景、Sun、微软、Borland、Nombas和其他对这门脚本语言有兴趣的公司的工程师\n组成。他们花了数月时间打造出 ECMA-262，也就是 ECMAScript（发音为“ek-ma-script”）这个新的脚\n本语言标准。")]),t._v(" "),a("p",[t._v("1998 年，国际标准化组织（ISO）和国际电工委员会（IEC）也将 ECMAScript 采纳为标准（ISO/\nIEC-16262）。自此以后，各家浏览器均以 ECMAScript 作为自己 JavaScript 实现的依据，虽然具体实现\n各有不同。")]),t._v(" "),a("h2",{attrs:{id:"_1-2-javascript-实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-javascript-实现"}},[t._v("#")]),t._v(" 1.2 JavaScript 实现")]),t._v(" "),a("p",[t._v("虽然JavaScript和ECMAScript基本上是同义词，但JavaScript远远不限于ECMA-262所定义的那样。\n没错，完整的 JavaScript 实现包含以下几个部分（见图 1-1）：")]),t._v(" "),a("ul",[a("li",[t._v("核心（ECMAScript）")]),t._v(" "),a("li",[t._v("文档对象模型（DOM）")]),t._v(" "),a("li",[t._v("浏览器对象模型（BOM）")])]),t._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"xx",href:"/img/book/001/1-1.jpg"}},[a("img",{attrs:{src:t.$withBase("/img/book/001/1-1.jpg"),alt:"1-1"}})])]),t._v(" "),a("h3",{attrs:{id:"_1-2-1-ecmascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-ecmascript"}},[t._v("#")]),t._v(" 1.2.1 ECMAScript")]),t._v(" "),a("p",[a("strong",[t._v("ECMAScript")]),t._v("，即 ECMA-262 定义的语言，并不局限于 Web 浏览器。事实上，这门语言没有输入和\n输出之类的方法。ECMA-262 将这门语言作为一个基准来定义，以便在它之上再构建更稳健的脚本语言。\nWeb 浏览器只是 ECMAScript 实现可能存在的一种"),a("strong",[t._v("宿主环境")]),t._v("（host environment）。宿主环境提供\nECMAScript 的基准实现和与环境自身交互必需的扩展。扩展（比如 DOM）使用 ECMAScript 核心类型\n和语法，提供特定于环境的额外功能。其他宿主环境还有服务器端 JavaScript 平台 Node.js和即将被淘汰\n的 Adobe Flash。")]),t._v(" "),a("p",[t._v("在基本的层面，它描述这门语言的如下部分：")]),t._v(" "),a("ul",[a("li",[t._v("语法")]),t._v(" "),a("li",[t._v("类型")]),t._v(" "),a("li",[t._v("语句")]),t._v(" "),a("li",[t._v("关键字")]),t._v(" "),a("li",[t._v("保留字")]),t._v(" "),a("li",[t._v("操作符")]),t._v(" "),a("li",[t._v("全局对象")])]),t._v(" "),a("h4",{attrs:{id:"_1-ecmascript-版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-ecmascript-版本"}},[t._v("#")]),t._v(" 1. ECMAScript 版本")]),t._v(" "),a("p",[t._v("ECMAScript 不同的版本以“edition”表示（也就是描述特定实现的 ECMA-262 的版本）。ECMA-262 的第 1 版本质上跟网景的 JavaScript 1.1 相同，只不过删除了所有浏览器特定的代码，外加少量细微的修改。")]),t._v(" "),a("p",[a("strong",[t._v("ECMA-262 第 2 版")]),t._v("只是做了一些编校工作，主要是为了更新之后严格符合 ISO/IEC-16262 的要求，\n并没有增减或改变任何特性。")]),t._v(" "),a("p",[a("strong",[t._v("ECMA-262 第 3 版")]),t._v("第一次真正对这个标准进行更新，更新了字符串处理、错误定义和数值输出。此外还增加了对正则表达式、新的控制语句、 try / catch 异常处理的支持，以及为了更好地让标准国际化\n所做的少量修改。")]),t._v(" "),a("p",[a("strong",[t._v("ECMA-262 第 4 版")]),t._v("是对这门语言的一次彻底修订。作为对 JavaScript 在 Web上日益成功的回应，开\n发者开始修订 ECMAScript 以满足全球 Web 开发日益增长的需求。为此，Ecma T39 再次被召集起来，\n以决定这门语言的未来。结果，他们制定的规范几乎在第 3 版基础上完全定义了一门新语言。第 4 版包\n括强类型变量、新语句和数据结构、真正的类和经典的继承，以及操作数据的新手段。")]),t._v(" "),a("p",[t._v("与此同时，TC39 委员会的一个子委员会也提出了另外一份提案，叫作“ECMAScript 3.1”，只对这\n门语言进行了较少的改进。这个子委员会的人认为第 4 版对这门语言来说跳跃太大了。因此，他们提出\n了一个改动较小的提案，只要在现有 JavaScript 引擎基础上做一些增改就可以实现。最终，ES3.1 子委员\n会赢得了 TC39 委员会的支持，ECMA-262 第 4 版在正式发布之前被放弃。")]),t._v(" "),a("p",[t._v("ECMAScript 3.1 变成了 ECMA-262 的第 5 版，于 2009 年 12 月 3 日正式发布。第 5 版致力于厘清\n第 3 版存在的歧义，也增加了新功能。新功能包括原生的解析和序列化 JSON 数据的 JSON 对象、方便\n继承和高级属性定义的方法，以及新的增强 ECMAScript 引擎解释和执行代码能力的严格模式。第 5 版\n在 2011 年 6 月发布了一个维护性修订版，这个修订版只更正了规范中的错误，并未增加任何新的语言\n或库特性。")]),t._v(" "),a("p",[a("strong",[t._v("ECMA-262 第 6 版")]),t._v("，俗称 ES6、ES2015 或 ES Harmony（和谐版），于 2015年 6月发布。这一版包\n含了大概这个规范有史以来最重要的一批增强特性。ES6 正式支持了类、模块、迭代器、生成器、箭头\n函数、期约、反射、代理和众多新的数据类型。")]),t._v(" "),a("p",[a("strong",[t._v("ECMA-262 第 7 版")]),t._v("，也称为 ES7 或 ES2016，于 2016 年 6 月发布。这次修订只包含少量语法层面的\n增强，如 Array.prototype.includes 和指数操作符。")]),t._v(" "),a("p",[a("strong",[t._v("ECMA-262 第 8 版")]),t._v("，也称为 ES8、ES2017，完成于 2017 年 6 月。这一版主要增加了异步函数（async/\nawait）、 SharedArrayBuffer 及 Atomics API，以及 Object.values() / Object.entries() / Object.\ngetOwnPropertyDescriptors() 和字符串填充方法，另外明确支持对象字面量最后的逗号。")]),t._v(" "),a("p",[a("strong",[t._v("ECMA-262 第 9 版")]),t._v("，也称为 ES9、ES2018，发布于 2018 年 6 月。这次修订包括异步迭代、剩余和\n扩展属性、一组新的正则表达式特性、 Promise finally() ，以及模板字面量修订。")]),t._v(" "),a("p",[a("strong",[t._v("ECMA-262第 10版")]),t._v("，也称为 ES10、ES2019，发布于 2019年 6月。这次修订增加了 Array.prototype.\nflat() / flatMap() 、 String.prototype.trimStart() / trimEnd() 、 Object.fromEntries() 方\n法，以及 Symbol.prototype.description 属性，明确定义了 Function.prototype.toString()\n的返回值并固定了 Array.prototype.sort() 的顺序。另外，这次修订解决了与 JSON 字符串兼容的\n问题，并定义了 catch 子句的可选绑定。")]),t._v(" "),a("h4",{attrs:{id:"_2-ecmascript-符合性是什么意思"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-ecmascript-符合性是什么意思"}},[t._v("#")]),t._v(" 2. ECMAScript 符合性是什么意思")]),t._v(" "),a("p",[t._v("ECMA-262 阐述了什么是 ECMAScript 符合性。要成为 ECMAScript 实现，必须满足下列条件：")]),t._v(" "),a("ul",[a("li",[t._v("支持 ECMA-262 中描述的所有“类型、值、对象、属性、函数，以及程序语法与语义”；")]),t._v(" "),a("li",[t._v("支持 Unicode 字符标准。\n此外，符合性实现还可以满足下列要求。")]),t._v(" "),a("li",[t._v("增加 ECMA-262 中未提及的“额外的类型、值、对象、属性和函数”。ECMA-262 所说的这些额\n外内容主要指规范中未给出的新对象或对象的新属性。")]),t._v(" "),a("li",[t._v("支持 ECMA-262 中没有定义的“程序和正则表达式语法”（意思是允许修改和扩展内置的正则表\n达式特性）。")])]),t._v(" "),a("h4",{attrs:{id:"_3-浏览器对-ecmascript-的支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-浏览器对-ecmascript-的支持"}},[t._v("#")]),t._v(" 3. 浏览器对 ECMAScript 的支持")]),t._v(" "),a("p",[t._v("1996 年，Netscape Navigator 3 发布时包含了 JavaScript 1.1。JavaScript 1.1 规范随后被提交给 Ecma，\n作为对新的 ECMA-262 标准的建议。")]),t._v(" "),a("p",[t._v("Netscape Navigator 3 发布后不久，微软推出了 IE3。IE 的这个版本包含了 JScript 1.0，本意是提供与\nJavaScript 1.1 相同的功能。")]),t._v(" "),a("p",[t._v("JScript 的再次更新出现在 IE4 中的 JScript 3.0（2.0 版是在 Microsoft Internet Information Server 3.0中\n发布的，但从未包含在浏览器中）。")]),t._v(" "),a("p",[t._v("网景又在 Netscape Navigator 4.06 中将其 JavaScript 版本升级到 1.3，因此做到了与 ECMA-262第 1\n版完全兼容。JavaScript 1.3 增加了对 Unicode 标准的支持，并做到了所有对象都与平台无关，同时保留\n了 JavaScript 1.2所有的特性。")]),t._v(" "),a("p",[t._v("到了 2008 年，五大浏览器（IE、Firefox、Safari、Chrome 和 Opera）全部兼容 ECMA-262 第 3 版。\nIE8 率先实现 ECMA-262 第 5 版，并在 IE9 中完整支持。Firefox 4 很快也做到了。")]),t._v(" "),a("h3",{attrs:{id:"_1-2-2-dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-dom"}},[t._v("#")]),t._v(" 1.2.2 DOM")]),t._v(" "),a("p",[a("strong",[t._v("文档对象模型")]),t._v("（DOM，Document Object Model）是一个应用编程接口（API），用于在 HTML 中使\n用扩展的 XML。DOM 将整个页面抽象为一组分层节点。HTML 或 XML 页面的每个组成部分都是一种\n节点，包含不同的数据。比如下面的 HTML 页面：")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Sample Page"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" Hello World!"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("这些代码通过 DOM 可以表示为一组分层节点，如图 1-2 所示。\n"),a("a",{attrs:{"data-fancybox":"",title:"1-2",href:"/img/book/001/1-2.jpg"}},[a("img",{attrs:{src:t.$withBase("/img/book/001/1-2.jpg"),alt:"1-2"}})])]),t._v(" "),a("h4",{attrs:{id:"_1-为什么-dom-是必需的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-为什么-dom-是必需的"}},[t._v("#")]),t._v(" 1. 为什么 DOM 是必需的")]),t._v(" "),a("p",[t._v("在 IE4 和 Netscape Navigator 4支持不同形式的动态 HTML（DHTML）的情况下，开发者首先可以\n做到不刷新页面而修改页面外观和内容。这代表了 Web 技术的一个巨大进步，但也暴露了很大的问题。\n由于网景和微软采用不同思路开发 DHTML，开发者写一个 HTML 页面就可以在任何浏览器中运行的好\n日子就此终结。")]),t._v(" "),a("p",[t._v("为了保持 Web 跨平台的本性，必须要做点什么。人们担心如果无法控制网景和微软各行其是，那\n么 Web 就会发生分裂，导致人们面向浏览器开发网页。就在这时，万维网联盟（W3C，World Wide Web\nConsortium）开始了制定 DOM标准的进程。")]),t._v(" "),a("h4",{attrs:{id:"_2-dom-级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-dom-级别"}},[t._v("#")]),t._v(" 2. DOM 级别")]),t._v(" "),a("p",[t._v("1998 年 10 月，DOM Level 1 成为 W3C 的推荐标准。这个规范由两个模块组成：DOM Core 和 DOM HTML。前者提供了一种映射 XML 文档，从而方便访问和操作文档任意部分的方式；后者扩展了前者，\n并增加了特定于 HTML 的对象和方法。")]),t._v(" "),a("p",[a("strong",[t._v("DOM Level 1")]),t._v("的目标是映射文档结构，而 DOM Level 2 的目标则宽泛得多。这个对最初 DOM 的扩\n展增加了对（DHTML 早就支持的）鼠标和用户界面事件、范围、遍历（迭代 DOM 节点的方法）的支\n持，而且通过对象接口支持了层叠样式表（CSS）。")]),t._v(" "),a("p",[a("strong",[t._v("DOM Level 2")]),t._v("新增了以下模块，以支持新的接口。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("DOM 视图")]),t._v("：描述追踪文档不同视图（如应用 CSS 样式前后的文档）的接口。")]),t._v(" "),a("li",[a("strong",[t._v("DOM 事件")]),t._v("：描述事件及事件处理的接口。")]),t._v(" "),a("li",[a("strong",[t._v("DOM 样式")]),t._v("：描述处理元素 CSS 样式的接口。")]),t._v(" "),a("li",[a("strong",[t._v("DOM 遍历和范围")]),t._v("：描述遍历和操作 DOM树的接口。")])]),t._v(" "),a("p",[a("strong",[t._v("DOM Level 3")]),t._v("进一步扩展了 DOM，增加了以统一的方式加载和保存文档的方法（包含在一个叫 DOM\nLoad and Save 的新模块中），还有验证文档的方法（DOM Validation）。在 Level 3 中，DOM Core 经过扩\n展支持了所有 XML 1.0 的特性，包括 XML Infoset、XPath 和 XML Base。")]),t._v(" "),a("p",[t._v("目前，W3C 不再按照 Level 来维护 DOM 了，而是作为 DOM Living Standard 来维护，其快照称为\nDOM4。DOM4 新增的内容包括替代 Mutation Events的 Mutation Observers。")]),t._v(" "),a("h4",{attrs:{id:"_3-其他-dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-其他-dom"}},[t._v("#")]),t._v(" 3. 其他 DOM")]),t._v(" "),a("p",[t._v("除了 DOM Core 和 DOM HTML 接口，有些其他语言也发布了自己的 DOM 标准。下面列出的语言\n是基于 XML 的，每一种都增加了该语言独有的 DOM 方法和接口：")]),t._v(" "),a("ul",[a("li",[t._v("可伸缩矢量图（SVG，Scalable Vector Graphics）")]),t._v(" "),a("li",[t._v("数学标记语言（MathML，Mathematical Markup Language）")]),t._v(" "),a("li",[t._v("同步多媒体集成语言（SMIL，Synchronized Multimedia Integration Language）")])]),t._v(" "),a("h3",{attrs:{id:"_1-2-3-bom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-bom"}},[t._v("#")]),t._v(" 1.2.3 BOM")]),t._v(" "),a("p",[t._v("IE3 和 Netscape Navigator 3 提供了"),a("strong",[t._v("浏览器对象模型")]),t._v("（BOM） API，用于支持访问和操作浏览器的窗\n口。使用 BOM，开发者可以操控浏览器显示页面之外的部分。")]),t._v(" "),a("p",[t._v("总体来说，BOM 主要针对浏览器窗口和子窗口（frame），不过人们通常会把任何特定于浏览器的\n扩展都归在 BOM的范畴内。比如，下面就是这样一些扩展：\n弹出新浏览器窗口的能力；")]),t._v(" "),a("ul",[a("li",[t._v("移动、缩放和关闭浏览器窗口的能力；")]),t._v(" "),a("li",[t._v("navigator 对象，提供关于浏览器的详尽信息；")]),t._v(" "),a("li",[t._v("location 对象，提供浏览器加载页面的详尽信息；")]),t._v(" "),a("li",[t._v("screen 对象，提供关于用户屏幕分辨率的详尽信息；")]),t._v(" "),a("li",[t._v("performance 对象，提供浏览器内存占用、导航行为和时间统计的详尽信息；")]),t._v(" "),a("li",[t._v("对 cookie 的支持；")]),t._v(" "),a("li",[t._v("其他自定义对象，如 XMLHttpRequest 和 IE 的 ActiveXObject 。")])]),t._v(" "),a("h2",{attrs:{id:"_1-3-javascript-版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-javascript-版本"}},[t._v("#")]),t._v(" 1.3 JavaScript 版本")]),t._v(" "),a("p",[t._v("作为网景的继承者，Mozilla 是唯一仍在延续最初 JavaScript 版本编号的浏览器厂商。当初网景在将\n其源代码开源时（项目名为 Mozilla Project），JavaScript 在其浏览器中最后的版本是 1.3。（前面提到过，\n1.4 版是专门为服务器实现的。）因为 Mozilla Foundation 在持续开发 JavaScript，为它增加新特性、关键\n字和语法，所以 JavaScript 的版本号也在不断递增。")])])}),[],!1,null,null,null);a.default=n.exports}}]);